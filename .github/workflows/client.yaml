name: Nuxt CI/CD

on:
  push:
    branches:
      - main
    paths:
      - "client/**"
      - ".github/workflows/client.yaml"

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Code
        uses: actions/checkout@v3
        with:
          fetch-depth: 0
          ref: main

      - name: Install Dependencies
        run: | 
          node -v
          yarn set version berry
          yarn plugin import workspace-tools
          yarn workspaces foreach --exclude api --exclude web run install --frozen-lockfile

      - name: Build App
        run: | 
          yarn workspaces foreach -pt packages/* run prepack 
          NUXT_PUBLIC_API_URL=${{ secrets.NUXT_PUBLIC_API_URL }} yarn workspace client build
          

      - name: Compress Nuxt App 
        working-directory: ./client
        run: tar -czf .output.tar.gz .output ecosystem.config.js

      - name: Archive artifact
        uses: actions/upload-artifact@v3
        with:
          name: app
          path: ./client/.output.tar.gz
          if-no-files-found: error

  deploy:
    runs-on: ubuntu-latest
    needs: build
    env:
      ROOT_DIR: /var/www/pigment
      APP_DIR: /var/www/pigment/client
      SERVER_HOST: ${{ secrets.SERVER_HOST }}
      SERVER_USER: ${{ secrets.SERVER_USER }}
      SSH_PRIVATE_KEY: ${{ secrets.SSH_PRIVATE_KEY }}
      RELEASE_DIR: /var/www/pigment/client/releases/${{ github.sha }}

    steps:
      - name: Download artifact
        uses: actions/download-artifact@v3
        with:
          name: app
          
      - name: Upload via SCP
        uses: appleboy/scp-action@v0.1.4
        with:
          host: ${{ secrets.SERVER_HOST }}
          username: ${{ secrets.SERVER_USER }}
          key: ${{ secrets.SSH_PRIVATE_KEY }}
          source: '*'
          target: /var/www/pigment/client/releases/${{ github.sha }}

      - name: Symlink and Reload PM2
        uses: appleboy/ssh-action@v0.1.10
        with:
          host: ${{ secrets.SERVER_HOST }}
          username: ${{ secrets.SERVER_USER }}
          key: ${{ secrets.SSH_PRIVATE_KEY }}
          envs: ROOT_DIR,RELEASE_DIR,APP_DIR
          script: |
            export ROOT_DIR=$ROOT_DIR
            export RELEASE_DIR=$RELEASE_DIR
            export NUXT_PUBLIC_API_URL=${{ secrets.NUXT_PUBLIC_API_URL }}
            
            tar -xzf $RELEASE_DIR/.output.tar.gz -C $RELEASE_DIR/
            rm -rf /var/www/pigment/client/current
            ln -s $RELEASE_DIR /var/www/pigment/client/current
            cd /var/www/pigment/client/current
            pm2 reload ecosystem.config.js

      - name: Remove Old Releases 
        uses: appleboy/ssh-action@v0.1.10
        with:
          host: ${{ secrets.SERVER_HOST }}
          username: ${{ secrets.SERVER_USER }}
          key: ${{ secrets.SSH_PRIVATE_KEY }}
          envs: ROOT_DIR,RELEASE_DIR,APP_DIR
          script: |
            export APP_DIR=$APP_DIR
            
            cd $APP_DIR/releases 
            ls -t | tail -n +6 | xargs rm -rf
       
      - name: Send Success Notification
        uses: rjstone/discord-webhook-notify@v1
        with: 
          severity: info
          details: 'Deploy of https://github.com/${{ github.repository }} succeeded'
          webhookUrl: ${{ secrets.DISCORD_WEBHOOK }}
      
      - name: Send Failure Notification
        uses: rjstone/discord-webhook-notify@v1
        if: failure()
        with:
          severity: error
          details: 'Deploy Failed. https://github.com/${{ github.repository }}/actions/runs/${{ github.run_id }}'
          webhookUrl: ${{ secrets.DISCORD_WEBHOOK }}