name: Laravel CI/CD

on:
  push:
    branches:
      - main
    paths:
      - "api/**"
      - ".github/workflows/api.yaml"

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
        with:
          fetch-depth: 0
          ref: main

      - name: Install PHP dependencies
        working-directory: ./api
        run: composer install --no-scripts --prefer-dist --optimize-autoloader

      - name: Run tests
        working-directory: ./api
        run: vendor/bin/phpunit --exclude-group google

  deploy:
    runs-on: ubuntu-latest
    needs: build
    env:
      ROOT_DIR: /var/www/pigment
      APP_DIR: /var/www/pigment/api
      SERVER_USER: ${{ secrets.SERVER_USER }}
      SERVER_HOST: ${{ secrets.SERVER_HOST }}
      SSH_PRIVATE_KEY: ${{ secrets.SSH_PRIVATE_KEY }}
      RELEASE_DIR: /var/www/pigment/api/releases/${{ github.sha }}
      SERVER_PASS: ${{ secrets.SERVER_USER_PASS }}

    steps:
      - name: Deploy to server
        uses: appleboy/ssh-action@v0.1.10
        with:
          host: ${{ secrets.SERVER_HOST }}
          username: ${{ secrets.SERVER_USER }}
          key: ${{ secrets.SSH_PRIVATE_KEY }}
          envs: ROOT_DIR,RELEASE_DIR,APP_DIR,SERVER_PASS
          script: |
            set -e
            export ROOT_DIR=$ROOT_DIR
            export RELEASE_DIR=$RELEASE_DIR
            export SERVER_PASS=$SERVER_PASS
            
            cd $ROOT_DIR
            mkdir -p $RELEASE_DIR

            git clone --depth 1 https://github.com/colinxr/pigment.git repo
            cd repo
            
            git reset --hard HEAD
            
            rm -rf api/storage
            cp -rpa api/* $RELEASE_DIR

            echo $SERVER_PASS | sudo -S setfacl -d -m u:www-data:rwx $RELEASE_DIR
            echo $SERVER_PASS | sudo -S setfacl -d -m u:pigment:rwx $RELEASE_DIR
            
            ln -s /var/www/pigment/.env $RELEASE_DIR/.env 
            ln -s /var/www/pigment/storage $RELEASE_DIR/
            echo $SERVER_PASS | sudo -S chown www-data:www-data $RELEASE_DIR/.env
            echo $SERVER_PASS | sudo -S chmod 665 $RELEASE_DIR/.env
            echo $SERVER_PASS | sudo -S chown www-data:www-data $RELEASE_DIR/storage
            echo $SERVER_PASS | sudo -S chown www-data:www-data $RELEASE_DIR/storage/*
            echo $SERVER_PASS | sudo -S chmod 775 $RELEASE_DIR/storage/*
            ls -la $RELEASE_DIR/storage
            
            cd $ROOT_DIR && rm -rf repo
        
      - name: Handle Deploy failure
        if: ${{ failure() }}
        uses: appleboy/ssh-action@v0.1.10
        with:
          host: ${{ secrets.SERVER_HOST }}
          username: ${{ secrets.SERVER_USER }}
          key: ${{ secrets.SSH_PRIVATE_KEY }}
          envs: ROOT_DIR,RELEASE_DIR,APP_DIR,SERVER_PASS
          script: |
            cd $ROOT_DIR && rm -rf repo
            exit 1

      - name: Run Migrations
        uses: appleboy/ssh-action@v0.1.10
        with:
          host: ${{ secrets.SERVER_HOST }}
          username: ${{ secrets.SERVER_USER }}
          key: ${{ secrets.SSH_PRIVATE_KEY }}
          envs: ROOT_DIR,RELEASE_DIR,APP_DIR
          script: |
            export APP_DIR=$APP_DIR
            export RELEASE_DIR=$RELEASE_DIR

            cd $APP_DIR/current
            php artisan backup:clean
            php artisan backup:run
            
            cd $RELEASE_DIR 
            
            composer install --prefer-dist --no-scripts --no-dev -q -o;

            php artisan config:cache
            php artisan migrate --force
            php artisan optimize

      - name: Symlink Release & Set Up Permissions
        uses: appleboy/ssh-action@v0.1.10
        with:
          host: ${{ secrets.SERVER_HOST }}
          username: ${{ secrets.SERVER_USER }}
          key: ${{ secrets.SSH_PRIVATE_KEY }}
          envs: RELEASE_DIR,SERVER_PASS
          script: |
            export RELEASE_DIR=$RELEASE_DIR
            export SERVER_PASS=$SERVER_PASS

            echo 'removing old release'

            rm -rf /var/www/pigment/api/current
            
            echo 'linking new release'
            ln -s $RELEASE_DIR /var/www/pigment/api/current

            echo 'setting correct file permissions'

            echo $SERVER_PASS | sudo -S setfacl -d -m u:www-data:rwx /var/www/pigment/api/current
            echo $SERVER_PASS | sudo -S setfacl -d -m u:pigment:rwx /var/www/pigment/api/current

            echo $SERVER_PASS | sudo -S setfacl -d -m u:www-data:rwx /var/www/pigment/storage
            echo $SERVER_PASS | sudo -S setfacl -d -m u:pigment:rwx /var/www/pigment/storage
            

            echo $SERVER_PASS | sudo -S find /var/www/pigment/api/current -type d -exec chmod 775 {} \;
            echo $SERVER_PASS | sudo -S find /var/www/pigment/api/current -type f -exec chmod 644 {} \;   
            
            echo $SERVER_PASS | sudo -S find /var/www/pigment/storage -type d -exec chmod 775 {} \;
            echo $SERVER_PASS | sudo -S find /var/www/pigment/storage -type f -exec chmod 644 {} \;   

            echo 'restarting php and nginx'

            echo $SERVER_PASS | sudo -S service php8.1-fpm restart
            echo $SERVER_PASS | sudo -S service nginx restart

      - name: Remove Old Releases 
        uses: appleboy/ssh-action@v0.1.10
        with:
          host: ${{ secrets.SERVER_HOST }}
          username: ${{ secrets.SERVER_USER }}
          key: ${{ secrets.SSH_PRIVATE_KEY }}
          envs: APP_DIR,SERVER_PASS
          script: |
            export APP_DIR=$APP_DIR
            export SERVER_PASS=$SERVER_PASS
            
            echo $SERVER_PASS | sudo -S find $APP_DIR/releases -type d -exec chmod 755 {} \;
            echo $SERVER_PASS | sudo -S find $APP_DIR/releases -type f -exec chmod 644 {} \;
            cd $APP_DIR/releases
            ls -t | tail -n +6 | xargs rm -rf
     
      -   name: Send Success Notification
          uses: rjstone/discord-webhook-notify@v1
          with: 
            severity: info
            details: 'Deploy of https://github.com/${{ github.repository }} succeeded'
            webhookUrl: ${{ secrets.DISCORD_WEBHOOK }}
      
      - name: Send Failure Notification
        uses: rjstone/discord-webhook-notify@v1
        if: failure()
        with:
            severity: error
            details: 'Deploy Failed. https://github.com/${{ github.repository }}/actions/runs/${{ github.run_id }}'
            webhookUrl: ${{ secrets.DISCORD_WEBHOOK }}